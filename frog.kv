#:kivy 1.8.0
#:import randint random.randint
#:import random random.random
#:import win kivy.core.window
#:import kivy kivy
#:import Vector kivy.vector.Vector

# the game background image
<Background>
    source: self.source
    size: app.window.size
    allow_stretch: True
    keep_ratio: False

<Live@Image>
    alive_img: "img/live.png"
    lost_img: "img/live_lost.png"
    size_hint: None, None
    size: dp(30), sp(50)
    source: self.alive_img

# line to draw jump distance
<JumpLine>
    x1: 0
    y1: 0
    x2: 0
    y2: 0
    max: dp(120)
    canvas:
        Color:
            rgba: 1, 0, 0, .9
        Line:
            points: self.x1, self.y1, self.x2, self.y2
            width: dp(1.5)

<Fly>
    app: app
    scatter: scatter
    fly_img: "img/fly_red_eye.png"
    source: self.fly_img
    size_hint: None, None
    size: dp(30), dp(30)
    speed: 1.5
    rot_change: random()
    pos: randint(dp(40), app.window.width - dp(100)), randint(dp(40), app.window.height - dp(40))
    
    Scatter:
        id: scatter
        do_rotation: False
        do_translation: False
        do_scale: False
        size: root.size
        pos: root.pos
        center: root.center
        rotation: randint(0, 360)

        Image:
            source: root.source
            size: root.size
            center_x: self.center_x
            center_y: self.center_y
            allow_stretch: True
            keep_ratio: False

<Boat>
    app: app
    scatter: scatter
    source: "img/boat.png"
    size_hint: None, None
    size: dp(20), dp(70)
    speed: -1.5
    rot_change: random()
    pos: randint(dp(40), app.window.width - dp(100)), randint(dp(40), app.window.height - dp(40))
    
    Scatter:
        id: scatter
        do_rotation: False
        do_translation: False
        do_scale: False
        size: root.size
        pos: root.pos
        center: root.center
        rotation: randint(0, 360)

        Image:
            source: root.source
            size: root.size
            center_x: self.center_x
            center_y: self.center_y
            allow_stretch: True
            keep_ratio: False

# frog description
<Frog>
    app: app
    scatter: scatter
    sit_img: self.sit_img
    jump_img: self.jump_img
    source: self.sit_img
    size_hint: None, None
    size: dp(35), dp(75)
    place: self.place
    alive: True
    player: False
    jumpline: None
    Scatter:
        id: scatter
        do_rotation: False
        do_translation: False
        do_scale: False
        size: root.size
        pos: root.pos
        center: root.center

        Image:
            source: root.source
            size: root.size
            center_x: self.center_x
            center_y: self.center_y
            allow_stretch: True
            keep_ratio: False
            
# water lily description
<WaterLily>
    app: app
    scatter: scatter
    source: "img/water_lily_001.png"
    size_hint: None, None
    size: dp(60), dp(60)
    free: True
    static: False
    auto_reappear: True
    Scatter:
        id: scatter
        do_rotation: False
        do_translation: False
        do_scale: False
        rotation: randint(0, 360)
        size: root.size
        pos: root.pos
        center: root.center

        Image:
            source: root.source
            size: root.size
            center_x: self.center_x
            center_y: self.center_y
            allow_stretch: True
            keep_ratio: False


<Base@Image>
    source: self.source
    size_hint: None, None
    size: dp(200), dp(100)
    allow_stretch: True
    keep_ratio: False
    free: True
    static: True

<StoneLily>
    static: True
    source: "img/water_lily_stone.png"
    auto_reappear: False


<MoveableWaterLily>
    static: True
    auto_reappear: False
    label: label
    text: self.text
    solution: self.solution
    Label:
        id: label
        center: root.center
        text: str(root.text)
        font_size: dp(20)


<SwitchLily>
    static: True
    auto_reappear: False
    not_pressed_img: "img/lily_switch_not_pressed.png"
    pressed_img: "img/lily_switch_pressed.png"
    pressed: not self.free
    source: self.pressed_img if self.pressed else self.not_pressed_img
    controlled: self.controlled


<MathWidget>
    app: app
    orientation: "horizontal"
    number_range: -10, 10
    count: 5
    type: "subtract"
    distance: dp(100)
    speed: 1
    exercise: ""
    Label:
        font_size: dp(25)
        text: str(root.exercise)
        center_x: root.pos[0] + root.count / 2 * root.distance + root.distance / 2
        y: root.y - 2.5 * self.font_size
    

<GameWidget>
    app: app
    id: game
    preferred_size: dp(600), dp(700)
    center_x: app.window.width / 2
    y: 0
    background: background
    start: start
    end: end
    status: status
    energy_label: energy_label
    game_scatter: game_scatter
    lilys: []
    lily_provider: []
    frogs: []
    flys: []
    player: self.player
    live_imgs: [live, live1, live2]
    lives: 3
    energy: self.energy
    running: True
    objects: {"background": background, "start": start, "end": end, "game_scatter": game_scatter, "live": live, "live1": live1, "live2": live2, "status": status, "energy_label": energy_label}
    Background:
        id: background
        source: "img/background_dark.png"
    GameScatter:
        app: app
        id: game_scatter
        do_translate: True
        do_rotate: False
        do_scale: False
        size: game.preferred_size
        y: 0
        center_x: game.center_x
        auto_bring_to_front: False
        before_jumpline: before_jumpline
        jumplines: jumplines
        after_jumplines: after_jumplines
        Base:
            id: start
            x: dp(300)
            y: 0
            source: "img/start.png"
            free: False

        Base:
            id: end
            center_x: start.center_x
            y: start.y + dp(600)
            source: "img/end.png"
    
        Widget:
            id: before_jumpline

        Widget:
            index: 1
            id: jumplines

        Widget:
            id: after_jumplines

    Live:
        id: live
        top: app.window.height - dp(5)
        x: dp(10)
    Live:
        id: live1
        top: app.window.height - dp(5)
        x: dp(50)
    Live:
        id: live2
        top: app.window.height - dp(5)
        x: dp(90)

    Label:
        id: energy_label
        size_hint: None, None
        top: app.window.height - dp(5)
        right: app.window.width
        text: "Energy: " + str(game.energy)

    Label:
        id: status
        size_hint: None, None
        center_x: app.window.width / 2
        center_y: app.window.height / 2
        font_size: dp(30)